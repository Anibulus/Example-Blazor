@using Entities
@using Business

@inject NavigationManager NavManager

<EditForm Model="oProduct">
    <div class="form-group">
        <label>Producto: </label>
        <InputText class="form-control" @bind-Value="oProduct.ProductName"/>
    </div>
    <div class="form-group">
        <label>Descripción: </label>
        <InputTextArea class="form-control" @bind-Value="oProduct.ProductDescription"/>
    </div>
    <div class="form-group">
        <label>Producto</label>
        <InputText class="form-control" @bind="oProduct.ProductName"/>
    </div>
    <div class="form-group">
        <label>Categoría: </label>
        <select @bind="@oProduct.CategoryId" class="form-control">
            @foreach(var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>
            }
        </select>
    </div>
    <input type="button" value="Agregar Producto" @onClick="UpdateProduct" />
</EditForm>

@code 
{
    [Parameter]
    public string IdProduct {get; set;}

    ProductEntity oProduct=new ProductEntity();
    List<CategoryEntity> categories=new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        using(var cDAO=new CategoryDAO())
        {
            categories=cDAO.ItemList();
        }/*
        using(var pDAO=new ProductDAO())
        {
            oProduct=pDAO.SelectItem(IdProduct.ToString());
        }*/
    }

    private void UpdateProduct()
    {/*
        using(var pDAO=new ProductDAO())
        {
            pDAO.UpdateItem(oProduct);
        }*/
        NavManager.NavigateTo("Product/List");
    }
}